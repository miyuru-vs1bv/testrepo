name: Trigger Deployment on PR Label

on:
  pull_request:
    types: [closed]

permissions:
  pull-requests: write

jobs:
  validate-and-trigger:
    runs-on: ubuntu-latest

    steps:
      - name: Check for Label and Merged PR
        id: check_label
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              throw new Error("This event does not have a pull_request payload.");
            }
            const prNumber = pr.number;
            if (!pr.merged) {
              throw new Error(`PR #${prNumber} was closed without merging.`);
            }
            const hasDeployDevLabel = pr.labels.some(label => label.name.toLowerCase() === 'deploy:dev');
            if (!hasDeployDevLabel) {
              throw new Error(`PR #${prNumber} does not have the 'deploy:dev' label.`);
            }
            console.log(`PR #${prNumber} is merged and has the 'deploy:dev' label.`);

      - name: Set and Validate Deployment Variables
        id: vars
        env:
          COMMIT_ID: ${{ github.event.pull_request.merge_commit_sha }}
        run: |
          echo "Validating deployment variables..."
          # Force environment to development
          ENVIRONMENT="development"
          echo "environment=${ENVIRONMENT}" >> "$GITHUB_OUTPUT"
          
          # Validate that the merge commit SHA exists and use it as the country config image tag.
          if [ -z "$COMMIT_ID" ]; then
            echo "Error: Merge commit SHA not found."
            exit 1
          fi

          MERGE_SHA="$COMMIT_ID"
          # Extract the short commit id (first 7 characters)
          SHORT_SHA="${MERGE_SHA:0:7}"
          echo "countryconfig_image_tag=${SHORT_SHA}" >> "$GITHUB_OUTPUT"
          echo "Using short commit SHA as country config image tag: ${SHORT_SHA}"

      - name: Comment on PR about Development Deployment
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        with:
          script: |
            // Construct the GitHub Action Run URL using environment variables
            const serverUrl = process.env.GITHUB_SERVER_URL;
            const runId = process.env.GITHUB_RUN_ID;
            const { owner, repo } = context.repo;
            const actionRunUrl = `${serverUrl}/${owner}/${repo}/actions/runs/${runId}`;
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: process.env.PR_NUMBER,
              body: `ðŸš€ Deploying to development environment. [View Action Run](${actionRunUrl}) ðŸ˜Ž`
            });
            console.log(`Comment added to PR #${process.env.PR_NUMBER}`);

      - name: Trigger Downstream Deployment
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: downstream_deployment
          client-payload: |
            {
              "environment": "development",
              "core-image-tag": "tonga/devops",
              "countryconfig-image-tag": "${{ steps.vars.outputs.countryconfig_image_tag }}"
            }
